== EXAMPLE 42 PUPPET MODULES

Example42 is a set of Puppet Modules that provides an integrated and coherent Puppet setup to manage many common applications.

Each module contains at least one class having its same name, which can be used by nodes.

=== GENERAL NOTE ON PUPPET NODES

You have 2 ways to define nodes in Puppet:

* Via Puppet manifests, using the "node" definitions and the resources declared on included starting  from the file /etc/manifests/site.pp

* Via an External Node Classifier (ENC), such as Dashboard, Puppet Enterprise Console or Foreman or whatever custom source, where you may have a GUI that helps in setting nodes and their variables.

The general logic is that for each node you have to set variables (eventually using different methods) that affect the behavior of the class that are included.

If you choose the first approach, based on site.pp, (which is the default when you install Puppet) you can fine here some sample infrastructure layouts.
Look in 10_archive/2010 and 10_archive/2011 of the 2011 branch for alternative approaches.

In the toasters/ directory you find examples of master-less setups that can be used to quickly configure an appliance.

=== THE EXAMPLE42 PROJECT MODULE
The approach used here is minimal since in site.pp are defined only some general variables and nodes.

Most of the logic on what is placed in every node is moved in a "project" module, here called example42 where are defined custom classes, "role" classes (where classes are included for different purposes) and the custom templates and files used for the "example42" project.

This is easily reproducible by an ENC (just redefine the nodes used here and the relevant variables).

=== INSTALLATION
You can retrieve the Example42 modules Version 1.0 (Stable) with:

        git clone --recursive -b 1.0 git://github.com/example42/puppet-modules.git

You can get the current module set, which is in a transition phase with both 1.0 and NextGen modules with:

        git clone --recursive git://github.com/example42/puppet-modules.git

=== UPDATE
When you want to update the modules with the upstream version (don't do this directory in a production environment!) remember that also the submodules have to be updated:

        cd /etc/puppet/modules # Or the dir where you have your local git repo
        git pull origin master
        git submodule init
        git submodule update
        git submodule foreach git pull origin master



